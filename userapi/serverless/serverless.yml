# Definisce il servizio come "user-api". Questo è il nome del servizio che stiamo creando.
service: user-api

provider:
  # Definisce il provider cloud come AWS.
  name: aws
  # Specifica la runtime (versione di Python) da utilizzare per le funzioni Lambda.
  runtime: python3.12
  # Definisce la regione AWS in cui verranno create le risorse.
  region: us-east-1
  # Specifica le dichiarazioni di policy IAM per il ruolo della funzione Lambda.
  iamRoleStatements:
    - Effect: Allow  # Definisce l'effetto della policy come "Allow".
      Action:
        # Autorizza la funzione Lambda a utilizzare l'azione "PutItem" su DynamoDB.
        - dynamodb:PutItem
        # Autorizza la funzione Lambda a utilizzare l'azione "GetItem" su DynamoDB.
        - dynamodb:GetItem
      # Specifica la risorsa DynamoDB a cui si applicano le azioni sopra definite.
      Resource: arn:aws:dynamodb:us-east-1:412381778166:table/Users

functions:
  # Definisce la funzione Lambda per creare un utente.
  createUser:
    # Specifica l'handler della funzione Lambda, ossia il file e la funzione Python da eseguire.
    handler: handler.create_user
    # Definisce gli eventi che attiveranno la funzione Lambda.
    events:
      - http:
          # Definisce il percorso HTTP dell'endpoint API.
          path: user
          # Specifica il metodo HTTP utilizzato (POST).
          method: post

  # Definisce la funzione Lambda per ottenere un utente per ID.
  getUserById:
    # Specifica l'handler della funzione Lambda, ossia il file e la funzione Python da eseguire.
    handler: handler.get_user_by_id
    # Definisce gli eventi che attiveranno la funzione Lambda.
    events:
      - http:
          # Definisce il percorso HTTP dell'endpoint API. {id} è un parametro di percorso.
          path: user/{id}
          # Specifica il metodo HTTP utilizzato (GET).
          method: get

resources:
  # Definisce le risorse AWS da creare. In questo caso, una tabella DynamoDB.
  Resources:
    UsersTable:
      # Specifica il tipo di risorsa AWS, in questo caso una tabella DynamoDB.
      Type: AWS::DynamoDB::Table
      Properties:
        # Definisce il nome della tabella DynamoDB.
        TableName: Users
        # Definisce gli attributi della tabella, in questo caso solo "id".
        AttributeDefinitions:
          - AttributeName: id  # Definisce l'attributo "id".
            AttributeType: S    # Specifica che l'attributo "id" è una stringa (S).
        # Definisce lo schema della chiave della tabella, in questo caso solo la chiave primaria.
        KeySchema:
          - AttributeName: id  # L'attributo "id" è la chiave primaria della tabella.
            KeyType: HASH      # Il tipo di chiave è "HASH", ossia una chiave primaria semplice.
        # Definisce la capacità di throughput della tabella.
        ProvisionedThroughput:
          # Capacità di lettura in unità.
          ReadCapacityUnits: 1
          # Capacità di scrittura in unità.
          WriteCapacityUnits: 1
